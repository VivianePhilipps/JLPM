% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expectancy.R
\name{expectancy}
\alias{expectancy}
\title{Computation of sojourn time from a joint model}
\usage{
expectancy(
  x,
  event,
  cond = NULL,
  newdata,
  var.time,
  start = 0,
  nMC = 1000,
  upper = 150,
  subdivisions = 100L,
  rel.tol = .Machine$double.eps^0.25,
  draws = FALSE,
  ndraws = 2000,
  returndraws = FALSE,
  cl = NULL
)
}
\arguments{
\item{x}{an object of class \code{jointLPM} representing of joint shared random effects model}

\item{event}{a named list specifying the state (ie the outcomes levels) in which the sojourn time is computed.}

\item{cond}{an optional named list specifying the initial state at start time (argument \code{start}).}

\item{newdata}{a data frame specifying the covariate profile from which the sojourn time is computed.}

\item{var.time}{a character string specifying the name of the time variable in the
longitudinal submodel. Note that this time covariate should not be included in newdata.}

\item{start}{a numeric value specifying the time from which the sojourn time is computed (the lower bound of the integral over time). Default to 0.}

\item{nMC}{an integer giving the number of Monte Carlo simulations used to compute the integral over the random effects.}

\item{upper}{a numeric specifying the upper bound of the integral over time. Default to 150.}

\item{subdivisions}{passed to the \code{integrate} function.}

\item{rel.tol}{passed to the \code{integrate} function.}

\item{draws}{logical indicating if confidence interval should be computed. Default to FALSE.}

\item{ndraws}{integer giving the number of draws used to compute the confidence interval. Default to 2000.}

\item{returndraws}{logical indicating if the \code{ndraws} results should be returned. Default to FALSE.}

\item{cl}{either a cluster created with \code{makeCluster} or an integer specifying the number of cores
that should be used for computation. Only used with draws = TRUE.}
}
\value{
if \code{draws = FALSE}, returns a single value. If \code{draws = TRUE} and \code{returndraws = FALSE},
returns the median, the 2.5\% and 97.5\% quantiles, the mean, the standard deviation and the number of removed draws (computational issues).
If \code{draws = TRUE} and \code{returndraws = TRUE}, returns the \code{ndraws} values.
}
\description{
From a joint shared random effect model with ordinal longitudinal outcomes,
this function computes the time spend before reaching a certain level of the outcome(s).
}
\details{
1. Overall expected sojourn time

The expected time before reaching level k from outcome Y is the integral over time t, from 0 to infinity, of P(Y(t) <= k, T > t), that is int_0^infty P(Y(t) <= k, T > t) dt.

2. Expected sojourn time from a time s

Conditionally on being under level k at time s and being alive at time s, the sojourn time is int_s^infty P(Y(t) <= k, T > t | Y(s) <= k, T > s) dt = int_s^infty P(Y(t) <= k, T > t, Y(s) <= k) dt / P(Y(s) <= k, T > s)
}
\examples{
library(lcmm)
paq <- paquid[which(paquid$age_init < paquid$agedem), ]
paq$age65 <- (paq$age - 65) / 10
paq$ageinit65 <- (paq$age_init - 65) / 10
paq$agedem65 <- (paq$agedem - 65) / 10

#### Estimation on a joint model with one ordinal marker
\dontrun{
M2 <- jointLPM(fixed = HIER ~ age65 * male,
                random = ~ age65,
                subject = "ID", 
                link = "thresholds",
                survival = Surv(ageinit65, agedem65, dem) ~ male,
                sharedtype = 'RE',
                var.time = "age65",
                data = paq, 
                methInteg = "QMC", 
                nMC = 1000,
                B = c(0.6, 2.399, -0.409, 2.076, 6.338, 0.994, -0.223, -0.005,
                     -0.299, 0.174, 0.523, 1.044, 1.064, 0.506))

#### Computation of the expected time before reaching level 2 (HIER = 2)
#### (ie computes int_0^150 P(HIER(t) <= 2, T > t) dt)
expectancy(M2, list(HIER = 2), newdata = data.frame(male = 0), var.time = "age65")

#### Computation of the expected time before reaching level 2 (HIER = 2),
#### when a level of at most 1 is reached at time 0.5
#### (ie computes int_0.5^150 P(HIER(t) <= 2, T > t | HIER(0.5) <= 1, T > 0.5) dt)
expectancy(M2, list(HIER = 2), cond = list(HIER = 1), start = 0.5,
newdata = data.frame(male = 0), var.time = "age65")
}

}
